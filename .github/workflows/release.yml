name: Release

on:
  push:
    branches:
      - main
      - beta
  workflow_dispatch:

jobs:
  affected:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Get affected
        id: affected
        run: |
          echo "DOCKER=$(npx nx print-affected --target=docker --select=tasks.target.project | sed 's/ //g' | sed 's|$|"|' | sed -e 's/^/"/' | jq -c 'split(",")')" >> $GITHUB_OUTPUT
          echo "NPM=$(npx nx print-affected --target=npm --select=tasks.target.project | sed 's/ //g' | sed 's|$|"|' | sed -e 's/^/"/' | jq -c 'split(",")')" >> $GITHUB_OUTPUT
    outputs:
      docker: ${{ steps.affected.outputs.DOCKER }}
      npm: ${{ steps.affected.outputs.NPM }}
  release:
    runs-on: ubuntu-latest
    needs: [affected]
    if: ${{ fromJson(needs.affected.outputs.docker)[0] || fromJson(needs.affected.outputs.npm)[0] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
